import wixUsers from 'wix-users';
import wixData from 'wix-data';
import wixLocation from 'wix-location';
import {session} from 'wix-storage';
import wixWindow from 'wix-window';
import {stripeToken} from 'public/stripe.js';
import { retrieveMethod, retrieveSubscription,retrieveInvoices } from 'backend/stripeProcessor.jsw';

let apiKeyPk
let apiKeySk

var email 
var planId

$w.onReady(async function () {

//-------set below for live or test Stripe----//

let stripeMode = "test";   //value is "test" or "live"

if(stripeMode == "test"){

    apiKeyPk = "stripeTestPk";
    apiKeySk = "stripeTestSk";


} else if(stripeMode == "live"){

    apiKeyPk = "stripeLivePk";
    apiKeySk = "stripeLiveSk";

}

//--------------------end--------------------//
	
	email = await wixUsers.currentUser.getEmail();

	wixData.query('Team').eq('email', email).find().then((res) => {
        var itemId = res.items[0]._id
        session.setItem("id", itemId)
        session.setItem("userName", res.items[0].name)
		session.setItem("cus", res.items[0].customerId)

		let cus = res.items[0].customerId;
		console.log("Customer", cus)

	
		retrieveMethod(cus, apiKeySk)
	.then( (response) => {
        
			console.log("Stripe Methods:", response, response.data[0].id);
			let allItems = response.data
			//$w("#agentCards").data = allItems
			
			let cardData = [];

			let agentCards = $w("#agentCards");
			$w("#agentCards").data = [];
			
			
			
				allItems.forEach(method => {

					console.log(
								"Method: ", method
							)


					//query card type
					let cardType = method.card.brand; //visa
					let cardExpMonth = method.card.exp_month;
					let cardExpYear = method.card.exp_year;
					let cardlast4 = method.card.last4;


						wixData.query('cardTypes').eq('title', cardType).find().then((cardResults) => {

							console.log(
								"Results: ", cardResults
							)

							var cardLogoImage = cardResults.items[0].logo
							

							let newCard = {
									"_id": unixCode(),
									"cardType": cardType,
									"cardExpMonth": cardExpMonth,
									"cardExpYear": cardExpYear,
									"cardlast4": cardlast4,
									"cardLogoImage": cardLogoImage,
									}

									cardData.push(newCard)

									$w("#agentCards").data = cardData
									console.log("Card Data: ", cardData)

									agentCards.onItemReady(($item, itemData) => {

									$item('#mainCardData').text = itemData.cardType.toUpperCase() + " ending in " + itemData.cardlast4.toString();
									$item('#expiration').text = "Expires " + itemData.cardExpMonth.toString() + "/" + itemData.cardExpYear.toString()
									$item('#cardImage').src = itemData.cardLogoImage;


									})

						})

				

					
				})	

				
			
	});

	retrieveInvoices(cus,apiKeySk)
	.then( (invoices) => {
				
					console.log("Stripe Invoices:", invoices);
					let allItems = invoices.data

					let invoiceData = [];

					let agentInvoices = $w("#agentInvoices");
					$w("#agentInvoices").data = [];

					allItems.forEach(invoice => {

						let subscriptionId = invoice.lines.data[0].price.id;
						let invoicePdf = invoice.invoice_pdf;
						let amount = "$" + (invoice.total / 100).toString() + " USD";
						let date = formatDate(new Date(invoice.effective_at*1000));
						console.log("Date: ", date)

						if(subscriptionId){

							wixData.query('stripeSubscriptions').eq('apiId', subscriptionId).find().then((planResults) => {

									console.log(
										"Results: ", planResults
									)

									var planName = planResults.items[0].title

						

										let newInvoice = {
											"_id": unixCode(),
											"planName": planName,
											"invoicePdf": invoice.invoice_pdf,
											"amount": "$" + (invoice.total / 100).toString() + " USD",
											"date": date

											}

											invoiceData.push(newInvoice);

											$w("#agentInvoices").data = invoiceData;
											$w("#agentInvoices").expand()
									

									agentInvoices.onItemReady(($item, itemData) => {

									$item('#invoicePrice').text = itemData.amount;
									$item('#subscriptionName').text = itemData.planName;
									$item('#invoiceDate').text = itemData.date;
									
									$item('#download').link = itemData.invoicePdf;

									


									})


							})

						} else {
							//await Seth's feedback
						}

					})


	})

	

	retrieveSubscription(cus, apiKeySk)
			.then( (subscriptions) => {
				
					console.log("Stripe Subscriptions:", subscriptions);
					let allItems = subscriptions.data

					let subscriptionData = [];

					let agentSubscriptions = $w("#agentSubscription");
					$w("#agentSubscription").data = [];
			
			
			allItems.forEach(subscription => {

				//query card type
				
				let planId = subscription.plan.id; //price_xx matches stripeSubscriptions database
				let status = subscription.status; //active
				let price = "$" + ((subscription.plan.amount) / 100).toString();
				let interval = subscription.plan.interval; //month or year

				wixData.query('stripeSubscriptions').eq('apiId', planId).find().then((planResults) => {

									console.log(
										"Results: ", planResults
									)

									var planLogoImage = planResults.items[0].logo
									var planName = planResults.items[0].title

						

						let newSubscription = {
											"_id": unixCode(),
											"planId": subscription.plan.id,
											"status": subscription.status,
											"price": "$" + ((subscription.plan.amount) / 100).toString(),
											"interval": subscription.plan.interval,
											"planLogoImage": planLogoImage

											}

											subscriptionData.push(newSubscription);

											$w("#agentSubscription").data = subscriptionData;
									

									agentSubscriptions.onItemReady(($item, itemData) => {

									$item('#price').text = itemData.price;
									$item('#interval').text = "/" + itemData.interval
									
									$item('#planName').text = planName;

									if(itemData.planLogoImage != undefined){

										$item('#subscriptionImage').src = itemData.planLogoImage;
										$item('#subscriptionImage').expand()

									}


									})


				})

				
				})		
					
					
			});


    })

});


function unixCode (){ 
  var timeStamp = Math.floor(Date.now()/1000);
  return timeStamp.toString(); 
}

function formatDate (date) {
		var d = new Date(date),
        month = date.toLocaleString('default', { month: 'long' }),
        day = ' ' + d.getDate(),
        year = " " + d.getFullYear();

    
    if (day.length < 2) day = '0' + day;
	let thisDate = month + " " + day + "," + year;

    return thisDate
}
