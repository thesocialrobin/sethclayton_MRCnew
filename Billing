import wixUsers from 'wix-users';
import wixData from 'wix-data';
import wixLocation from 'wix-location';
import {session} from 'wix-storage';
import wixWindow from 'wix-window';
import {stripeToken} from 'public/stripe.js';
import { retrieveMethod, retrieveSubscription,retrieveInvoices } from 'backend/stripeProcessor.jsw';

let apiKeyPk
let apiKeySk
let count
let newInvoiceItems = null;
newInvoiceItems = [];

var email 
var planId

$w.onReady(async function () {

//-------set below for live or test Stripe----//

let stripeMode = "test";   //value is "test" or "live"

if(stripeMode == "test"){

    apiKeyPk = "stripeTestPk";
    apiKeySk = "stripeTestSk";


} else if(stripeMode == "live"){

    apiKeyPk = "stripeLivePk";
    apiKeySk = "stripeLiveSk";

}

//--------------------end--------------------//
	
	email = await wixUsers.currentUser.getEmail();

	wixData.query('Team').eq('email', email).find().then((res) => {
        var itemId = res.items[0]._id
        session.setItem("id", itemId)
        session.setItem("userName", res.items[0].name)
		session.setItem("cus", res.items[0].customerId)

		let cus = res.items[0].customerId;
		console.log("Customer", cus)

	
		retrieveMethod(cus, apiKeySk)
	.then( (response) => {
        
			console.log("Stripe Methods:", response, response.data[0].id);
			let allItems = response.data
			//$w("#agentCards").data = allItems
			
			let cardData = [];

			let agentCards = $w("#agentCards");
			$w("#agentCards").data = [];
			
			
			
				allItems.forEach(method => {

					console.log(
								"Method: ", method
							)


					//query card type
					let cardType = method.card.brand; //visa
					let cardExpMonth = method.card.exp_month;
					let cardExpYear = method.card.exp_year;
					let cardlast4 = method.card.last4;


						wixData.query('cardTypes').eq('title', cardType).find().then((cardResults) => {

							console.log(
								"Results: ", cardResults
							)

							var cardLogoImage = cardResults.items[0].logo
							

							let newCard = {
									"_id": unixCode(),
									"cardType": cardType,
									"cardExpMonth": cardExpMonth,
									"cardExpYear": cardExpYear,
									"cardlast4": cardlast4,
									"cardLogoImage": cardLogoImage,
									}

									cardData.push(newCard)

									$w("#agentCards").data = cardData
									console.log("Card Data: ", cardData)

									agentCards.onItemReady(($item, itemData) => {

									$item('#mainCardData').text = itemData.cardType.toUpperCase() + " ending in " + itemData.cardlast4.toString();
									$item('#expiration').text = "Expires " + itemData.cardExpMonth.toString() + "/" + itemData.cardExpYear.toString()
									$item('#cardImage').src = itemData.cardLogoImage;


									})

						})

				

					
				})	

				
			
	});

	retrieveInvoices(cus,apiKeySk)
	.then( (invoices) => {
				
					console.log("Stripe Invoices:", invoices);
					let allItems = invoices.data
					let totalPages = allItems.length;
					let invoicePaginationTotal = 8;
					let countedTotal = 0;

					let invoiceData = [];

					let agentInvoices = $w("#agentInvoices");
					$w("#agentInvoices").data = [];

					allItems.forEach(invoice => {

						countedTotal++

						let subscriptionId = invoice.lines.data[0].price.id;
						let invoicePdf = invoice.invoice_pdf;
						let amount = "$" + (invoice.total / 100).toString() + " USD";
						let date = formatDate(new Date(invoice.effective_at*1000));
						console.log("Date: ", date)

						const finishedCount = () => {

							if (count == 8 || totalPages.length == count) {

								if(subscriptionId){

									wixData.query('stripeSubscriptions').eq('apiId', subscriptionId).find().then((planResults) => {

											console.log(
												"Results: ", planResults
											)

											var planName = planResults.items[0].title

								

												let newInvoice = {
													"_id": unixCode(),
													"planName": planName,
													"invoicePdf": invoice.invoice_pdf,
													"amount": "$" + (invoice.total / 100).toString() + " USD",
													"date": date

													}

													invoiceData.push(newInvoice);

													$w("#agentInvoices").data = invoiceData;
													$w("#agentInvoices").expand()
											

											agentInvoices.onItemReady(($item, itemData) => {

											$item('#invoicePrice').text = itemData.amount;
											$item('#subscriptionName').text = itemData.planName;
											$item('#invoiceDate').text = itemData.date;
											
											$item('#download').link = itemData.invoicePdf;

											if(totalPages > 1){
												
												$w('#totalPages').text =  "of " + totalPages.toString();

												if(count !== totalPages){
													let getNearestEight = roundEight(count);
													$w('#pageSeries').text = "1" + "-" + getNearestEight.toString();
												} 

												if (totalPages > 8){
													$w('#goForward').expand()
													$w('#goBack').expand()

												}

											} else if( totalPages < 2){
												$w('#pageSeries').text = "1" 
												$w('#totalPages').text =  "of " + totalPages.toString();


											}

											


											})


									})

								} else {
									//await Seth's feedback
								}

							}

						}

						if (countedTotal == totalPages) {

                        if (invoice[count] !== undefined && count <= invoicePaginationTotal) {
                            newInvoiceItems.push(invoice[count])
                            console.log("Current Count 1: ", count)
                            count++
                        }

                        if (invoice[count] !== undefined && count <= invoicePaginationTotal) {
                            newInvoiceItems.push(invoice[count])
                            console.log("Current Count 2: ", count)
                            count++
                        }

                        if (invoice[count] !== undefined && count <= invoicePaginationTotal) {
                            newInvoiceItems.push(invoice[count])
                            console.log("Current Count 3: ", count)
                            count++
                            console.log("Current Count of 3: ", count)
                        }

						if (invoice[count] !== undefined && count <= invoicePaginationTotal) {
                            newInvoiceItems.push(invoice[count])
                            console.log("Current Count 4: ", count)
                            count++
                            console.log("Current Count of 4: ", count)
                        }

						if (invoice[count] !== undefined && count <= invoicePaginationTotal) {
                            newInvoiceItems.push(invoice[count])
                            console.log("Current Count 5: ", count)
                            count++
                            console.log("Current Count of 5: ", count)
                        }

						if (invoice[count] !== undefined && count <= invoicePaginationTotal) {
                            newInvoiceItems.push(invoice[count])
                            console.log("Current Count 6: ", count)
                            count++
                            console.log("Current Count of 6: ", count)
                        }

						if (invoice[count] !== undefined && count <= invoicePaginationTotal) {
                            newInvoiceItems.push(invoice[count])
                            console.log("Current Count 7: ", count)
                            count++
                            console.log("Current Count of 7: ", count)
                        }

						if (invoice[count] !== undefined && count <= invoicePaginationTotal) {
                            newInvoiceItems.push(invoice[count])
                            console.log("Current Count 8: ", count)
                            count++
                            console.log("Current Count of 8: ", count)
                        }

						}

						finishedCount();

						

					})


	})

	

	retrieveSubscription(cus, apiKeySk)
			.then( (subscriptions) => {
				
					console.log("Stripe Subscriptions:", subscriptions);
					let allItems = subscriptions.data

					let subscriptionData = [];

					let agentSubscriptions = $w("#agentSubscription");
					let susbcriptionsList = $w("#subscriptionsList");
					$w("#agentSubscription").data = [];
			
			let totalSubscriptionAmount = 0;
			
			allItems.forEach(subscription => {

				//Billing Update 021624 0149
				console.log("Billing Update")

				if (subscription.plan == null){


                    let jointItems = subscription.items.data; //price_xx matches stripeSubscriptions database for multi-purchased items
					

                    jointItems.forEach(jointSubscription => {

                    let planId = jointSubscription.plan.id;
					console.log("Joint Subscription Plan ID", planId) //--HERE--//
					
					totalSubscriptionAmount = totalSubscriptionAmount + jointSubscription.plan.amount
					let jointstatus = jointSubscription.status; //active
					let jointprice = "$" + ((jointSubscription.plan.amount) / 100).toString();
					let jointinterval = jointSubscription.plan.interval; //month or year

					wixData.query('stripeSubscriptions').eq('apiId', planId).find().then((planResults) => {

						console.log(
							"Results: ", planResults
						)

						var planLogoImage = planResults.items[0].logo
						var planName = planResults.items[0].title

			

						let newSubscription = {
								"_id": unixCode(),
								"planId": subscription.plan.id,
								"status": subscription.status,
								"price": "$" + ((subscription.plan.amount) / 100).toString(),
								"interval": subscription.plan.interval,
								"planLogoImage": planLogoImage

								}

								subscriptionData.push(newSubscription);

								$w("#agentSubscription").data = subscriptionData;

								let listItems = [];
								let firstData = {
									"_id": "0001",
								"planId": "blank",
								"price": "SUBTOTAL",

								}
								listItems = subscriptionData;
								console.log("List Items:", listItems)
								listItems.unshift(firstData);
								$w("#subscriptionsList").data = listItems;
						

						agentSubscriptions.onItemReady(($item, itemData) => {

						$item('#price').text = itemData.price;
						$item('#interval').text = "/" + itemData.interval
						
							$item('#planName').text = planName;

						

						if(itemData.planLogoImage != undefined){

							$item('#subscriptionImage').src = itemData.planLogoImage;
							$item('#subscriptionImage').expand()

						}


						})

						susbcriptionsList.onItemReady(($item, itemData) => {

							console.log("List Items On Ready:", listItems)

						$item('#listPrice').text = itemData.price;
						
						

						$w('#totalSubscriptionAmount').text = "$" + ((totalSubscriptionAmount) / 100).toString();

						console.log("PLAN NAME: ", itemData.planId)

						if(itemData.price == "SUBTOTAL"){
							$item('#subscriptionPlanName').text = "ITEMS";
						} else if(itemData.price !== "SUBTOTAL"){
							
							$item('#subscriptionPlanName').text = planName;

						}


						})


					})


					})

				}

				if (subscription.plan !== null){



				totalSubscriptionAmount = totalSubscriptionAmount + subscription.plan.amount

				//query card type
				
				let planId = subscription.plan.id; //price_xx matches stripeSubscriptions database
				let status = subscription.status; //active
				let price = "$" + ((subscription.plan.amount) / 100).toString();
				let interval = subscription.plan.interval; //month or year

				wixData.query('stripeSubscriptions').eq('apiId', planId).find().then((planResults) => {

									console.log(
										"Results: ", planResults
									)

									var planLogoImage = planResults.items[0].logo
									var planName = planResults.items[0].title

						

						let newSubscription = {
											"_id": unixCode(),
											"planId": subscription.plan.id,
											"status": subscription.status,
											"price": "$" + ((subscription.plan.amount) / 100).toString(),
											"interval": subscription.plan.interval,
											"planLogoImage": planLogoImage

											}

											subscriptionData.push(newSubscription);

											$w("#agentSubscription").data = subscriptionData;

											let listItems = [];
											let firstData = {
												"_id": "0001",
											"planId": "blank",
											"price": "SUBTOTAL",

											}
											listItems = subscriptionData;
											console.log("List Items:", listItems)
											listItems.unshift(firstData);
											$w("#subscriptionsList").data = listItems;
									

									agentSubscriptions.onItemReady(($item, itemData) => {

									$item('#price').text = itemData.price;
									$item('#interval').text = "/" + itemData.interval
									
										$item('#planName').text = planName;

									

									if(itemData.planLogoImage != undefined){

										$item('#subscriptionImage').src = itemData.planLogoImage;
										$item('#subscriptionImage').expand()

									}


									})

									susbcriptionsList.onItemReady(($item, itemData) => {

										console.log("List Items On Ready:", listItems)

									$item('#listPrice').text = itemData.price;
									
									

									$w('#totalSubscriptionAmount').text = "$" + ((totalSubscriptionAmount) / 100).toString();

									console.log("PLAN NAME: ", itemData.planId)

									if(itemData.price == "SUBTOTAL"){
										$item('#subscriptionPlanName').text = "ITEMS";
									} else if(itemData.price !== "SUBTOTAL"){
										
										$item('#subscriptionPlanName').text = planName;

									}


									})


				})

			}

				
				})		
					
					
			});


    })

});


function unixCode (){ 
  var timeStamp = Math.floor(Date.now()/1000);
  return timeStamp.toString(); 
}

function formatDate (date) {
		var d = new Date(date),
        month = date.toLocaleString('default', { month: 'long' }),
        day = ' ' + d.getDate(),
        year = " " + d.getFullYear();

    
    if (day.length < 2) day = '0' + day;
	let thisDate = month + " " + day + "," + year;

    return thisDate
}

export function roundEight(number){
    return Math.round(number / 8) * 8;
}

export function goForward_click(event) {
	let direction = "forward"
	loadMoreFunction(direction)
}

export function loadMoreFunction(direction){
	session.setItem("Clicked", "Start")
	console.log("Current Count Forward: ", count)

	let allItems = newInvoiceItems.length

	if (newInvoiceItems !== undefined && newInvoiceItems !== "") {
		
		console.log("Data: ", newInvoiceItems, count)
        let newItems = [];
		

		if (newInvoiceItems[count] !== undefined && count < allItems) {
            console.log("Added: ", newInvoiceItems[count])
            newItems.push(newInvoiceItems[count])
            if (direction == "backward"){
				count--
			} else if (direction == "forward"){
				count++
			}
            console.log("Count", allItems)
            session.setItem("Clicked", "Pending")
        }

		if (newInvoiceItems[count] !== undefined && count < allItems) {
            console.log("Added: ", newInvoiceItems[count])
            newItems.push(newInvoiceItems[count])
            if (direction == "backward"){
				count--
			} else if (direction == "forward"){
				count++
			}
            console.log("Count", allItems)
            session.setItem("Clicked", "Pending")
        }

		if (newInvoiceItems[count] !== undefined && count < allItems) {
            console.log("Added: ", newInvoiceItems[count])
            newItems.push(newInvoiceItems[count])
            if (direction == "backward"){
				count--
			} else if (direction == "forward"){
				count++
			}
            console.log("Count", allItems)
            session.setItem("Clicked", "Pending")
        }

		if (newInvoiceItems[count] !== undefined && count < allItems) {
            console.log("Added: ", newInvoiceItems[count])
            newItems.push(newInvoiceItems[count])
            if (direction == "backward"){
				count--
			} else if (direction == "forward"){
				count++
			}
            console.log("Count", allItems)
            session.setItem("Clicked", "Pending")
        }

		if (newInvoiceItems[count] !== undefined && count < allItems) {
            console.log("Added: ", newInvoiceItems[count])
            newItems.push(newInvoiceItems[count])
            count++
            console.log("Count", allItems)
            session.setItem("Clicked", "Pending")
        }

		if (newInvoiceItems[count] !== undefined && count < allItems) {
            console.log("Added: ", newInvoiceItems[count])
            newItems.push(newInvoiceItems[count])
            if (direction == "backward"){
				count--
			} else if (direction == "forward"){
				count++
			}
            console.log("Count", allItems)
            session.setItem("Clicked", "Pending")
        }

		if (newInvoiceItems[count] !== undefined && count < allItems) {
            console.log("Added: ", newInvoiceItems[count])
            newItems.push(newInvoiceItems[count])
            if (direction == "backward"){
				count--
			} else if (direction == "forward"){
				count++
			}
            console.log("Count", allItems)
            session.setItem("Clicked", "Pending")
        }

		if (newInvoiceItems[count] !== undefined && count < allItems) {
            console.log("Added: ", newInvoiceItems[count])
            newItems.push(newInvoiceItems[count])
            if (direction == "backward"){
				count--
			} else if (direction == "forward"){
				count++
			}
            console.log("Count", allItems)
            session.setItem("Clicked", "Pending")
        }

		newItems.reverse()

		let getStatus = session.getItem("Clicked")

		if ($w('#agentInvoices').data.length < 8 || (count == allItems && getStatus == "Start")) { 

			count = 0
			let thisTotal = 8

			if (newInvoiceItems[count] !== undefined && count <= thisTotal) {
                console.log("Added Restart: ", newInvoiceItems[count])
                newItems.push(newInvoiceItems[count])
                count++
            }
			if (newInvoiceItems[count] !== undefined && count <= thisTotal) {
                console.log("Added Restart: ", newInvoiceItems[count])
                newItems.push(newInvoiceItems[count])
                count++
            }
			if (newInvoiceItems[count] !== undefined && count <= thisTotal) {
                console.log("Added Restart: ", newInvoiceItems[count])
                newItems.push(newInvoiceItems[count])
                count++
            }
			if (newInvoiceItems[count] !== undefined && count <= thisTotal) {
                console.log("Added Restart: ", newInvoiceItems[count])
                newItems.push(newInvoiceItems[count])
                count++
            }
			if (newInvoiceItems[count] !== undefined && count <= thisTotal) {
                console.log("Added Restart: ", newInvoiceItems[count])
                newItems.push(newInvoiceItems[count])
                count++
            }
			if (newInvoiceItems[count] !== undefined && count <= thisTotal) {
                console.log("Added Restart: ", newInvoiceItems[count])
                newItems.push(newInvoiceItems[count])
                count++
            }
			if (newInvoiceItems[count] !== undefined && count <= thisTotal) {
                console.log("Added Restart: ", newInvoiceItems[count])
                newItems.push(newInvoiceItems[count])
                count++
            }
			if (newInvoiceItems[count] !== undefined && count <= thisTotal) {
                console.log("Added Restart: ", newInvoiceItems[count])
                newItems.push(newInvoiceItems[count])
                count++
            }

			if (count == 8) {

                let invoiceList = $w('#agentInvoices')

                invoiceList.data = newItems;

				 console.log("Invoice Data Count is 8: ", invoiceList.data)

			}

		}

		let invoiceList = $w('#agentInvoices')

        invoiceList.data = newItems;
        console.log("Invoice Data: ", invoiceList.data)

		session.setItem("Clicked", "End")

	}
}


export function goBack_click(event) {
	let direction = "backward"
	loadMoreFunction(direction)
}